CUSTOM	= $dff000	; Base
BLTDDAT	= $000		; Blitter destination early read (unusable)
DMACONR	= $002		; DMA control (and blitter status) read
VPOSR	= $004		; Read vertical raster position bit 9 (and interlace odd/even frame)
VHPOSR	= $006		; Rest of raster XY position - High byte: vertical, low byte: horizontal
DSKDATR	= $008		; Disk data early read (unusable)
JOY0DAT	= $00a		; Joystick/mouse 0 data
JOT1DAT	= $00c		; Joystick/mouse 1 data
CLXDAT	= $00e		; Poll (read and clear) sprite collision state
ADKCONR	= $010		; Audio, disk control register read
POT0DAT	= $012		; Pot counter pair 0 data
POT1DAT	= $014		; Pot counter pair 1 data
POTGOR	= $016		; Pot pin data read
SERDATR	= $018		; Serial port data and status read
DSKBYTR	= $01a		; Disk data byte and status read
INTENAR	= $01c		; Interrupt enable bits read
INTREQR	= $01e		; Interrupt request bits read
DSKPTH	= $020		; Disk track buffer pointer (high 5 bits)
DSKPTL	= $022		; Disk track buffer pointer (low 15 bits)
DSKLEN	= $024		; Disk track buffer length
DSKDAT	= $026		; Disk DMA data write
REFPTR	= $028		; AGA: Refresh pointer
VPOSW	= $02a		; Write vert most sig. bits (and frame flop)
VHPOSW	= $02c		; Write vert and horiz pos of beam
COPCON	= $02e		; Coprocessor control register (CDANG)
SERDAT	= $030		; Serial port data and stop bits write
SERPER	= $032		; Serial port period and control
POTGO	= $034		; Pot count start, pot pin drive enable data
JOYTEST	= $036		; Write to all 4 joystick/mouse counters at once
STREQU	= $038		; Strobe for horiz sync with VBLANK and EQU
STRVBL	= $03a		; Strobe for horiz sync with VBLANK
STRHOR	= $03c		; Strobe for horiz sync
STRLONG	= $03e		; Strobe for identification of long/short horiz line
BLTCON0	= $040		; Blitter control reg 0
BLTCON1	= $042		; Blitter control reg 1
BLTAFWM	= $044		; Blitter first word mask for source A
BLTALWM	= $046		; Blitter last word mask for source A
BLTCPTH	= $048		; Blitter pointer to source C (high 5 bits)
BLTCPTL	= $04a		; Blitter pointer to source C (low 15 bits)
BLTBPTH	= $04c		; Blitter pointer to source B (high 5 bits)
BLTBPTL	= $04e		; Blitter pointer to source B (low 15 bits)
BLTAPTH	= $050		; Blitter pointer to source A (high 5 bits)
BLTAPTL	= $052		; Blitter pointer to source A (low 15 bits)
BLTDPTH	= $054		; Blitter pointer to destination D (high 5 bits)
BLTDPTL	= $056		; Blitter pointer to destination D (low 15 bits)
BLTSIZE	= $058		; Blitter start and size (win/width, height)
BLTCON0L= $05a		; Blitter control 0 lower 8 bits (minterms)
BLTSIZV	= $05c		; Blitter V size (for 15 bit vert size)
BLTSIZH	= $05e		; ECS: Blitter H size & start (for 11 bit H size)
BLTCMOD	= $060		; Blitter modulo for source C
BLTBMOD	= $062		; Blitter modulo for source B
BLTAMOD	= $064		; Blitter modulo for source A
BLTDMOD	= $066		; Blitter modulo for destination D
BLTCDAT	= $070		; Blitter source C data reg
BLTBDAT	= $072		; Blitter source B data reg
BLTADAT	= $074		; Blitter source A data reg
SPRHDAT	= $078		; AGA: Ext logic UHRES sprite pointer and data identifier
BPLHDAT	= $07a		; AGA: Ext logic UHRES bit plane identifier
LISAID	= $07c		; AGA: Chip revision level for Denise/Lisa
DSKSYNC	= $07e		; Disk sync pattern
COP1LCH	= $080		; Write Copper pointer 1 (high 5 bits)
COP1LCL	= $082		; Write Copper pointer 1 (low 15 bits)
COP2LCH	= $084		; Write Copper pointer 2 (high 5 bits)
COP2LCL	= $086		; Write Copper pointer 2 (low 15 bits)
COPJMP1	= $088		; Trigger Copper 1 (any value)
COPJMP2	= $08a		; Trigger Copper 2 (any value)
COPINS	= $08c		; Coprocessor inst fetch identify
DIWSTRT	= $08e		; Display window start (upper left vert-hor pos)
DIWSTOP	= $090		; Display window stop (lower right vert-hor pos)
DDFSTRT	= $092		; Display bitplane data fetch start.hor pos
DDFSTOP	= $094		; Display bitplane data fetch stop.hor pos
DMACON	= $096		; DMA control write (clear or set)
CLXCON	= $098		; Write Sprite collision control bits
INTENA	= $09a		; Interrupt enable bits (clear or set bits)
INTREQ	= $09c		; Interrupt request bits (clear or set bits)
ADKCON	= $09e		; Audio, disk and UART control
AUD0LCH	= $0a0		; Audio channel 0 pointer (high 5 bits)
AUD0LCL	= $0a2		; Audio channel 0 pointer (low 15 bits)
AUD0LC	= $0a0
AUD0LEN	= $0a4		; Audio channel 0 length
AUD0PER	= $0a6		; Audio channel 0 period
AUD0VOL	= $0a8		; Audio channel 0 volume
AUD0DAT	= $0aa		; Audio channel 0 data
AUD1LC 	= $0b0
AUD1LCH	= $0b0		; Audio channel 1 pointer (high 5 bits)
AUD1LCL	= $0b2		; Audio channel 1 pointer (low 15 bits)
AUD1LEN	= $0b4		; Audio channel 1 length
AUD1PER	= $0b6		; Audio channel 1 period
AUD1VOL	= $0b8		; Audio channel 1 volume
AUD1DAT	= $0ba		; Audio channel 1 data
AUD2LC 	= $0c0
AUD2LCH	= $0c0		; Audio channel 2 pointer (high 5 bits)
AUD2LCL	= $0c2		; Audio channel 2 pointer (low 15 bits)
AUD2LEN	= $0c4		; Audio channel 2 length
AUD2PER	= $0c6		; Audio channel 2 period
AUD2VOL	= $0c8		; Audio channel 2 volume
AUD2DAT	= $0ca		; Audio channel 2 data
AUD3LC 	= $0d0
AUD3LCH	= $0d0		; Audio channel 3 pointer (high 5 bits)
AUD3LCL	= $0d2		; Audio channel 3 pointer (low 15 bits)
AUD3LEN	= $0d4		; Audio channel 3 length
AUD3PER	= $0d6		; Audio channel 3 period
AUD3VOL	= $0d8		; Audio channel 3 volume
AUD3DAT	= $0da		; Audio channel 3 data
BPL1PTH	= $0e0		; Bitplane pointer 1 (high 5 bits)
BPL1PTL	= $0e2		; Bitplane pointer 1 (low 15 bits)
BPL2PTH	= $0e4		; Bitplane pointer 2 (high 5 bits)
BPL2PTL	= $0e6		; Bitplane pointer 2 (low 15 bits)
BPL3PTH	= $0e8		; Bitplane pointer 3 (high 5 bits)
BPL3PTL	= $0ea		; Bitplane pointer 3 (low 15 bits)
BPL4PTH	= $0ec		; Bitplane pointer 4 (high 5 bits)
BPL4PTL	= $0ee		; Bitplane pointer 4 (low 15 bits)
BPL5PTH	= $0f0		; Bitplane pointer 5 (high 5 bits)
BPL5PTL	= $0f2		; Bitplane pointer 5 (low 15 bits)
BPL6PTH	= $0f4		; Bitplane pointer 6 (high 5 bits)
BPL6PTL	= $0f6		; Bitplane pointer 6 (low 15 bits)
BPL7PTH	= $0f8		; AGA: Bitplane pointer 7 (high 5 bits)
BPL7PTL	= $0fa		; AGA: Bitplane pointer 7 (low 15 bits)
BPL8PTH	= $0fc		; AGA: Bitplane pointer 8 (high 5 bits)
BPL8PTL	= $0fe		; AGA: Bitplane pointer 8 (low 15 bits)
BPLCON0	= $100		; Bitplane depth and screen mode)
BPLCON1	= $102		; Bitplane/playfield horizontal scroll values
BPLCON2	= $104		; Sprites vs. Playfields priority
BPLCON3	= $106		; AGA: Bitplane control reg (enhanced features)
BPL1MOD	= $108		; Bitplane modulo (odd planes)
BPL2MOD	= $10a		; Bitplane modulo (even planes)
BPLCON4	= $10c		; AGA: Bitplane control reg (bitplane & sprite masks)
CLXCON2	= $10e		; AGA: Write Extended sprite collision control bits
BPL1DAT	= $110		; Bitplane 1 data (parallel to serial convert)
BPL2DAT	= $112		; Bitplane 2 data (parallel to serial convert)
BPL3DAT	= $114		; Bitplane 3 data (parallel to serial convert)
BPL4DAT	= $116		; Bitplane 4 data (parallel to serial convert)
BPL5DAT	= $118		; Bitplane 5 data (parallel to serial convert)
BPL6DAT	= $11a		; Bitplane 6 data (parallel to serial convert)
BPL7DAT	= $11c		; AGA: Bitplane 7 data (parallel to serial convert)
BPL8DAT	= $11e		; AGA: Bitplane 8 data (parallel to serial convert)
SPR0PTH	= $120		; Sprite 0 pointer (high 5 bits)
SPR0PTL	= $122		; Sprite 0 pointer (low 15 bits)
SPR1PTH	= $124		; Sprite 1 pointer (high 5 bits)
SPR1PTL	= $126		; Sprite 1 pointer (low 15 bits)
SPR2PTH	= $128		; Sprite 2 pointer (high 5 bits)
SPR2PTL	= $12a		; Sprite 2 pointer (low 15 bits)
SPR3PTH	= $12c		; Sprite 3 pointer (high 5 bits)
SPR3PTL	= $12e		; Sprite 3 pointer (low 15 bits)
SPR4PTH	= $130		; Sprite 4 pointer (high 5 bits)
SPR4PTL	= $132		; Sprite 4 pointer (low 15 bits)
SPR5PTH	= $134		; Sprite 5 pointer (high 5 bits)
SPR5PTL	= $136		; Sprite 5 pointer (low 15 bits)
SPR6PTH	= $138		; Sprite 6 pointer (high 5 bits)
SPR6PTL	= $13a		; Sprite 6 pointer (low 15 bits)
SPR7PTH	= $13c		; Sprite 7 pointer (high 5 bits)
SPR7PTL	= $13e		; Sprite 7 pointer (low 15 bits)
SPR0POS	= $140		; Sprite 0 vert-horiz start pos data
SPR0CTL	= $142		; Sprite 0 position and control data
SPR0DATA= $144		; Sprite 0 low bitplane data
SPR0DATB= $146		; Sprite 0 high bitplane data
SPR1POS	= $148		; Sprite 1 vert-horiz start pos data
SPR1CTL	= $14a		; Sprite 1 position and control data
SPR1DATA= $14c		; Sprite 1 low bitplane data
SPR1DATB= $14e		; Sprite 1 high bitplane data
SPR2POS	= $150		; Sprite 2 vert-horiz start pos data
SPR2CTL	= $152		; Sprite 2 position and control data
SPR2DATA= $154		; Sprite 2 low bitplane data
SPR2DATB= $156		; Sprite 2 high bitplane data
SPR3POS	= $158		; Sprite 3 vert-horiz start pos data
SPR3CTL	= $15a		; Sprite 3 position and control data
SPR3DATA= $15c		; Sprite 3 low bitplane data
SPR3DATB= $15e		; Sprite 3 high bitplane data
SPR4POS	= $160		; Sprite 4 vert-horiz start pos data
SPR4CTL	= $162		; Sprite 4 position and control data
SPR4DATA= $164		; Sprite 4 low bitplane data
SPR4DATB= $166		; Sprite 4 high bitplane data
SPR5POS	= $168		; Sprite 5 vert-horiz start pos data
SPR5CTL	= $16a		; Sprite 5 position and control data
SPR5DATA= $16c		; Sprite 5 low bitplane data
SPR5DATB= $16e		; Sprite 5 high bitplane data
SPR6POS	= $170		; Sprite 6 vert-horiz start pos data
SPR6CTL	= $172		; Sprite 6 position and control data
SPR6DATA= $174		; Sprite 6 low bitplane data
SPR6DATB= $176		; Sprite 6 high bitplane data
SPR7POS	= $178		; Sprite 7 vert-horiz start pos data
SPR7CTL	= $17a		; Sprite 7 position and control data
SPR7DATA= $17c		; Sprite 7 low bitplane data
SPR7DATB= $17e		; Sprite 7 high bitplane data
COLOR00	= $180		; Palette color 00
COLOR01	= $182		; Palette color 1
COLOR02	= $184		; Palette color 2
COLOR03	= $186		; Palette color 3
COLOR04	= $188		; Palette color 4
COLOR05	= $18a		; Palette color 5
COLOR06	= $18c		; Palette color 6
COLOR07	= $18e		; Palette color 7
COLOR08	= $190		; Palette color 8
COLOR09	= $192		; Palette color 9
COLOR10	= $194		; Palette color 10
COLOR11	= $196		; Palette color 11
COLOR12	= $198		; Palette color 12
COLOR13	= $19a		; Palette color 13
COLOR14	= $19c		; Palette color 14
COLOR15	= $19e		; Palette color 15
COLOR16	= $1a0		; Palette color 16
COLOR17	= $1a2		; Palette color 17
COLOR18	= $1a4		; Palette color 18
COLOR19	= $1a6		; Palette color 19
COLOR20	= $1a8		; Palette color 20
COLOR21	= $1aa		; Palette color 21
COLOR22	= $1ac		; Palette color 22
COLOR23	= $1ae		; Palette color 23
COLOR24	= $1b0		; Palette color 24
COLOR25	= $1b2		; Palette color 25
COLOR26	= $1b4		; Palette color 26
COLOR27	= $1b6		; Palette color 27
COLOR28	= $1b8		; Palette color 28
COLOR29	= $1ba		; Palette color 29
COLOR30	= $1bc		; Palette color 30
COLOR31	= $1be		; Palette color 31
HTOTAL	= $1c0		; AGA: Highest number count in horiz line (VARBEAMEN = 1)
HSSTOP	= $1c2		; AGA: Horiz line pos for HSYNC stop
HBSTRT	= $1c4		; AGA: Horiz line pos for HBLANK start
HBSTOP	= $1c6		; AGA: Horiz line pos for HBLANK stop
VTOTAL	= $1c8		; AGA: Highest numbered vertical line (VARBEAMEN = 1)
VSSTOP	= $1ca		; AGA: Vert line for Vsync stop
VBSTRT	= $1cc		; AGA: Vert line for VBLANK start
VBSTOP	= $1ce		; AGA: Vert line for VBLANK stop
SPRHSTRT= $1d0		; AGA: UHRES sprite vertical start
SPRHSTOP= $1d2		; AGA: UHRES sprite vertical stop
BPLHSTRT= $1d4		; AGA: UHRES bit plane vertical start
BPLHSTOP= $1d6		; AGA: UHRES bit plane vertical stop
HHPOSW	= $1d8		; AGA: DUAL mode hires H beam counter write
HHPOSR	= $1da		; AGA: DUAL mode hires H beam counter read
BEAMCON0= $1dc		; Beam counter control register
HSSTRT	= $1de		; AGA: Horizontal sync start (VARHSY)
VSSTRT	= $1e0		; AGA: Vertical sync start (VARVSY)
HCENTER	= $1e2		; AGA: Horizontal pos for vsync on interlace
DIWHIGH	= $1e4		; AGA: Display window upper bits for start/stop
BPLHMOD	= $1e6		; AGA: UHRES bit plane modulo
SPRHPTH	= $1e8		; AGA: UHRES sprite pointer (high 5 bits)
SPRHPTL	= $1ea		; AGA: UHRES sprite pointer (low 15 bits)
BPLHPTH	= $1ec		; AGA: VRam (UHRES) bitplane pointer (high 5 bits)
BPLHPTL	= $1ee		; AGA: VRam (UHRES) bitplane pointer (low 15 bits)
FMODE	= $1fc		; AGA: Write Fetch mode (0=OCS compatible)
NOOP	= $1fe		; No operation

HIRES 	= $8000
HAM  	= $0800
LACE  	= $0004
COLORBURST = $0200

